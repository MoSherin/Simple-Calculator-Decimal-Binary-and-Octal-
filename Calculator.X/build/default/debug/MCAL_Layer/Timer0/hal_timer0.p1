Version 4.0 HI-TECH Software Intermediate Code
[v F3022 `(v ~T0 @X0 0 tf ]
[v F3023 `(v ~T0 @X0 0 tf ]
[v F3015 `(v ~T0 @X0 0 tf ]
"58 MCAL_Layer/Timer0/hal_timer0.h
[; ;MCAL_Layer/Timer0/hal_timer0.h: 58: typedef struct{
[s S273 :1 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 `ui 1 :1 `uc 1 `*F3015 1 ]
[n S273 . bit_mode mode edge prescaler_value prescaler preload_value interrupt_priority timer0_interrupt_handler ]
"5862 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[s S245 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S245 . T0PS PSA T0SE T0CS T08BIT TMR0ON ]
"5870
[s S246 :1 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S246 . T0PS0 T0PS1 T0PS2 . T016BIT ]
"5861
[u S244 `S245 1 `S246 1 ]
[n S244 . . . ]
"5878
[v _T0CONbits `VS244 ~T0 @X0 0 e@4053 ]
"15 MCAL_Layer/Timer0/hal_timer0.c
[; ;MCAL_Layer/Timer0/hal_timer0.c: 15:         if(timer0->bit_mode == TIMER0_8BIT_MODE)
[c E2990 0 1 .. ]
[n E2990 . TIMER0_16BIT_MODE TIMER0_8BIT_MODE  ]
"23
[; ;MCAL_Layer/Timer0/hal_timer0.c: 23:         if(timer0->mode == TIMER0_COUNTER_MODE)
[c E2994 0 1 .. ]
[n E2994 . TIMER0_CLOCK_MODE TIMER0_COUNTER_MODE  ]
"26
[; ;MCAL_Layer/Timer0/hal_timer0.c: 26:             if(timer0->edge == TIMER0_RISING_EDGE)
[c E2998 0 1 .. ]
[n E2998 . TIMER0_RISING_EDGE TIMER0_FALLING_EDGE  ]
"39
[; ;MCAL_Layer/Timer0/hal_timer0.c: 39:         if(timer0->prescaler == TIMER0_PRESCALER_ENABLE)
[c E3002 0 1 .. ]
[n E3002 . TIMER0_PRESCALER_ENABLE TIMER0_PRESCALER_DISABLE  ]
"5947 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[v _TMR0H `Vuc ~T0 @X0 0 e@4055 ]
"5940
[v _TMR0L `Vuc ~T0 @X0 0 e@4054 ]
"6380
[s S258 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S258 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"6390
[s S259 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S259 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"6400
[s S260 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S260 . . GIEL GIEH ]
"6379
[u S257 `S258 1 `S259 1 `S260 1 ]
[n S257 . . . . ]
"6406
[v _INTCONbits `VS257 ~T0 @X0 0 e@4082 ]
[v F3035 `(v ~T0 @X0 0 tf ]
"54 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"3 MCAL_Layer/Timer0/hal_timer0.c
[; ;MCAL_Layer/Timer0/hal_timer0.c: 3: static void(*TMR0_Interupt_Handler)(void) = ((void*)0);
[v _TMR0_Interupt_Handler `*F3022 ~T0 @X0 1 s ]
[i _TMR0_Interupt_Handler
-> -> -> 0 `i `*v `*F3023
]
"4
[; ;MCAL_Layer/Timer0/hal_timer0.c: 4: uint16 preload;
[v _preload `ui ~T0 @X0 1 e ]
"6
[; ;MCAL_Layer/Timer0/hal_timer0.c: 6: Std_ReturnType timer0_inti(const timer0_t* timer0){
[v _timer0_inti `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _timer0_inti ]
[v _timer0 `*CS273 ~T0 @X0 1 r1 ]
[f ]
"7
[; ;MCAL_Layer/Timer0/hal_timer0.c: 7:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"8
[; ;MCAL_Layer/Timer0/hal_timer0.c: 8:     if(timer0 == ((void*)0))
[e $ ! == _timer0 -> -> -> 0 `i `*v `*CS273 275  ]
"9
[; ;MCAL_Layer/Timer0/hal_timer0.c: 9:     {
{
"10
[; ;MCAL_Layer/Timer0/hal_timer0.c: 10:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"11
[; ;MCAL_Layer/Timer0/hal_timer0.c: 11:     }
}
[e $U 276  ]
"12
[; ;MCAL_Layer/Timer0/hal_timer0.c: 12:     else
[e :U 275 ]
"13
[; ;MCAL_Layer/Timer0/hal_timer0.c: 13:     {
{
"14
[; ;MCAL_Layer/Timer0/hal_timer0.c: 14:         (T0CONbits.TMR0ON = 0);
[e = . . _T0CONbits 0 5 -> -> 0 `i `uc ]
"15
[; ;MCAL_Layer/Timer0/hal_timer0.c: 15:         if(timer0->bit_mode == TIMER0_8BIT_MODE)
[e $ ! == -> . *U _timer0 0 `i -> . `E2990 1 `i 277  ]
"16
[; ;MCAL_Layer/Timer0/hal_timer0.c: 16:         {
{
"17
[; ;MCAL_Layer/Timer0/hal_timer0.c: 17:             (T0CONbits.T08BIT = 1);
[e = . . _T0CONbits 0 4 -> -> 1 `i `uc ]
"18
[; ;MCAL_Layer/Timer0/hal_timer0.c: 18:         }
}
[e $U 278  ]
"19
[; ;MCAL_Layer/Timer0/hal_timer0.c: 19:         else
[e :U 277 ]
"20
[; ;MCAL_Layer/Timer0/hal_timer0.c: 20:         {
{
"21
[; ;MCAL_Layer/Timer0/hal_timer0.c: 21:             (T0CONbits.T016BIT = 0);
[e = . . _T0CONbits 1 4 -> -> 0 `i `uc ]
"22
[; ;MCAL_Layer/Timer0/hal_timer0.c: 22:         }
}
[e :U 278 ]
"23
[; ;MCAL_Layer/Timer0/hal_timer0.c: 23:         if(timer0->mode == TIMER0_COUNTER_MODE)
[e $ ! == -> . *U _timer0 1 `i -> . `E2994 1 `i 279  ]
"24
[; ;MCAL_Layer/Timer0/hal_timer0.c: 24:         {
{
"25
[; ;MCAL_Layer/Timer0/hal_timer0.c: 25:             (T0CONbits.T0CS = 1);
[e = . . _T0CONbits 0 3 -> -> 1 `i `uc ]
"26
[; ;MCAL_Layer/Timer0/hal_timer0.c: 26:             if(timer0->edge == TIMER0_RISING_EDGE)
[e $ ! == -> . *U _timer0 2 `i -> . `E2998 0 `i 280  ]
"27
[; ;MCAL_Layer/Timer0/hal_timer0.c: 27:             {
{
"28
[; ;MCAL_Layer/Timer0/hal_timer0.c: 28:                 (T0CONbits.T0SE = 0);
[e = . . _T0CONbits 0 2 -> -> 0 `i `uc ]
"29
[; ;MCAL_Layer/Timer0/hal_timer0.c: 29:             }
}
[e $U 281  ]
"30
[; ;MCAL_Layer/Timer0/hal_timer0.c: 30:             else
[e :U 280 ]
"31
[; ;MCAL_Layer/Timer0/hal_timer0.c: 31:             {
{
"32
[; ;MCAL_Layer/Timer0/hal_timer0.c: 32:                 (T0CONbits.T0SE = 1);
[e = . . _T0CONbits 0 2 -> -> 1 `i `uc ]
"33
[; ;MCAL_Layer/Timer0/hal_timer0.c: 33:             }
}
[e :U 281 ]
"34
[; ;MCAL_Layer/Timer0/hal_timer0.c: 34:         }
}
[e $U 282  ]
"35
[; ;MCAL_Layer/Timer0/hal_timer0.c: 35:         else
[e :U 279 ]
"36
[; ;MCAL_Layer/Timer0/hal_timer0.c: 36:         {
{
"37
[; ;MCAL_Layer/Timer0/hal_timer0.c: 37:             (T0CONbits.T0CS = 0);
[e = . . _T0CONbits 0 3 -> -> 0 `i `uc ]
"38
[; ;MCAL_Layer/Timer0/hal_timer0.c: 38:         }
}
[e :U 282 ]
"39
[; ;MCAL_Layer/Timer0/hal_timer0.c: 39:         if(timer0->prescaler == TIMER0_PRESCALER_ENABLE)
[e $ ! == -> . *U _timer0 4 `i -> . `E3002 0 `i 283  ]
"40
[; ;MCAL_Layer/Timer0/hal_timer0.c: 40:         {
{
"41
[; ;MCAL_Layer/Timer0/hal_timer0.c: 41:             (T0CONbits.PSA = 0);
[e = . . _T0CONbits 0 1 -> -> 0 `i `uc ]
"42
[; ;MCAL_Layer/Timer0/hal_timer0.c: 42:             (T0CONbits.T0PS = timer0->prescaler_value);
[e = . . _T0CONbits 0 0 . *U _timer0 3 ]
"43
[; ;MCAL_Layer/Timer0/hal_timer0.c: 43:         }
}
[e $U 284  ]
"44
[; ;MCAL_Layer/Timer0/hal_timer0.c: 44:         else
[e :U 283 ]
"45
[; ;MCAL_Layer/Timer0/hal_timer0.c: 45:         {
{
"46
[; ;MCAL_Layer/Timer0/hal_timer0.c: 46:             (T0CONbits.PSA = 1);
[e = . . _T0CONbits 0 1 -> -> 1 `i `uc ]
"47
[; ;MCAL_Layer/Timer0/hal_timer0.c: 47:         }
}
[e :U 284 ]
"48
[; ;MCAL_Layer/Timer0/hal_timer0.c: 48:         TMR0H = (timer0->preload_value) >> 8;
[e = _TMR0H -> >> . *U _timer0 5 -> 8 `i `uc ]
"49
[; ;MCAL_Layer/Timer0/hal_timer0.c: 49:         TMR0L = (uint8)(timer0->preload_value);
[e = _TMR0L -> . *U _timer0 5 `uc ]
"50
[; ;MCAL_Layer/Timer0/hal_timer0.c: 50:         preload = timer0->preload_value;
[e = _preload . *U _timer0 5 ]
"52
[; ;MCAL_Layer/Timer0/hal_timer0.c: 52:         (INTCONbits.TMR0IE = 1);
[e = . . _INTCONbits 0 5 -> -> 1 `i `uc ]
"53
[; ;MCAL_Layer/Timer0/hal_timer0.c: 53:         (INTCONbits.TMR0IF = 0);
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
"54
[; ;MCAL_Layer/Timer0/hal_timer0.c: 54:         TMR0_Interupt_Handler = timer0->timer0_interrupt_handler;
[e = _TMR0_Interupt_Handler . *U _timer0 7 ]
"68
[; ;MCAL_Layer/Timer0/hal_timer0.c: 68:       (INTCONbits.GIE = 1);
[e = . . _INTCONbits 1 7 -> -> 1 `i `uc ]
"69
[; ;MCAL_Layer/Timer0/hal_timer0.c: 69:       (INTCONbits.PEIE = 1);
[e = . . _INTCONbits 1 6 -> -> 1 `i `uc ]
"73
[; ;MCAL_Layer/Timer0/hal_timer0.c: 73:         (T0CONbits.TMR0ON = 1);
[e = . . _T0CONbits 0 5 -> -> 1 `i `uc ]
"75
[; ;MCAL_Layer/Timer0/hal_timer0.c: 75:     }
}
[e :U 276 ]
"76
[; ;MCAL_Layer/Timer0/hal_timer0.c: 76:     return ret;
[e ) _ret ]
[e $UE 274  ]
"77
[; ;MCAL_Layer/Timer0/hal_timer0.c: 77: }
[e :UE 274 ]
}
"78
[; ;MCAL_Layer/Timer0/hal_timer0.c: 78: Std_ReturnType timer0_deinti(const timer0_t* timer0){
[v _timer0_deinti `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _timer0_deinti ]
[v _timer0 `*CS273 ~T0 @X0 1 r1 ]
[f ]
"79
[; ;MCAL_Layer/Timer0/hal_timer0.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"80
[; ;MCAL_Layer/Timer0/hal_timer0.c: 80:     if(timer0 == ((void*)0))
[e $ ! == _timer0 -> -> -> 0 `i `*v `*CS273 286  ]
"81
[; ;MCAL_Layer/Timer0/hal_timer0.c: 81:     {
{
"82
[; ;MCAL_Layer/Timer0/hal_timer0.c: 82:         ret = (Std_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"83
[; ;MCAL_Layer/Timer0/hal_timer0.c: 83:     }
}
[e $U 287  ]
"84
[; ;MCAL_Layer/Timer0/hal_timer0.c: 84:     else
[e :U 286 ]
"85
[; ;MCAL_Layer/Timer0/hal_timer0.c: 85:     {
{
"86
[; ;MCAL_Layer/Timer0/hal_timer0.c: 86:         (T0CONbits.TMR0ON = 0);
[e = . . _T0CONbits 0 5 -> -> 0 `i `uc ]
"87
[; ;MCAL_Layer/Timer0/hal_timer0.c: 87:     }
}
[e :U 287 ]
"88
[; ;MCAL_Layer/Timer0/hal_timer0.c: 88:     return ret;
[e ) _ret ]
[e $UE 285  ]
"89
[; ;MCAL_Layer/Timer0/hal_timer0.c: 89: }
[e :UE 285 ]
}
"91
[; ;MCAL_Layer/Timer0/hal_timer0.c: 91: void TMR0_ISR(void){
[v _TMR0_ISR `(v ~T0 @X0 1 ef ]
{
[e :U _TMR0_ISR ]
[f ]
"92
[; ;MCAL_Layer/Timer0/hal_timer0.c: 92:     (INTCONbits.TMR0IF = 0);
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
"93
[; ;MCAL_Layer/Timer0/hal_timer0.c: 93:     TMR0H = preload >> 8;
[e = _TMR0H -> >> _preload -> 8 `i `uc ]
"94
[; ;MCAL_Layer/Timer0/hal_timer0.c: 94:     TMR0L = (uint8)(preload);
[e = _TMR0L -> _preload `uc ]
"95
[; ;MCAL_Layer/Timer0/hal_timer0.c: 95:     if(TMR0_Interupt_Handler)
[e $ ! != _TMR0_Interupt_Handler -> -> 0 `i `*F3035 289  ]
"96
[; ;MCAL_Layer/Timer0/hal_timer0.c: 96:     {
{
"97
[; ;MCAL_Layer/Timer0/hal_timer0.c: 97:         TMR0_Interupt_Handler();
[e ( *U _TMR0_Interupt_Handler ..  ]
"98
[; ;MCAL_Layer/Timer0/hal_timer0.c: 98:     }
}
[e :U 289 ]
"99
[; ;MCAL_Layer/Timer0/hal_timer0.c: 99: }
[e :UE 288 ]
}
